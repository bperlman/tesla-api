---
http_interactions:
  - request:
      method: get
      uri: https://auth.tesla.com/oauth2/v3/authorize?client_id=ownerapi&code_challenge=NGRjZDQ0ZmVkNDg4NjgwY2ZiNzIwNzI5OTAzMDUyMGI5YzgwYzRhZTIwM2UzNzFhNmZjMTk1NWE3MTE5NWYzZg==&code_challenge_method=S256&redirect_uri=https://auth.tesla.com/void/callback&response_type=code&scope=openid%20email%20offline_access&state=t1odfosll786yvntcwhp
      body:
        encoding: US-ASCII
        string: ''
      headers:
        User-Agent:
          - Faraday v1.3.0
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - '*/*'
    response:
      status:
        code: 200
        message: OK
      headers:
        Server:
          - nginx
        Content-Type:
          - text/html; charset=utf-8
        Content-Length:
          - '24778'
        X-Dns-Prefetch-Control:
          - 'off'
        X-Frame-Options:
          - DENY
        Strict-Transport-Security:
          - max-age=15552000; includeSubDomains
        X-Download-Options:
          - noopen
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        X-Request-Id:
          - 97789a07-33b7-4e56-a3c4-3702026c911a
        X-Correlation-Id:
          - 97789a07-33b7-4e56-a3c4-3702026c911a
        Content-Security-Policy:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-1ebf03851cab8b6ae12e'; style-src
            'unsafe-inline' 'self'"
        X-Content-Security-Policy:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-1ebf03851cab8b6ae12e'; style-src
            'unsafe-inline' 'self'"
        X-Webkit-Csp:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-1ebf03851cab8b6ae12e'; style-src
            'unsafe-inline' 'self'"
        Etag:
          - W/"60ca-coS2qlDypzGSRWVe156LoSL1Kk0"
        X-Response-Time:
          - 12.903ms
        Date:
          - Mon, 01 Feb 2021 16:13:54 GMT
        Connection:
          - keep-alive
        Set-Cookie:
          - tesla-auth.sid=s%3AFkrpEHCCrdXVdhqCoBAEXYMwx_t8KOLv.U6Z26UZJ4KuomZ%2B2ZnIBa7RyXGT3ySL3fAjCvRWZPtI;
            Path=/; Expires=Thu, 04 Feb 2021 16:13:54 GMT; HttpOnly; Secure
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          
    recorded_at: Mon, 01 Feb 2021 16:13:54 GMT
  - request:
      method: post
      uri: https://auth.tesla.com/oauth2/v3/authorize?client_id=ownerapi&code_challenge=NGRjZDQ0ZmVkNDg4NjgwY2ZiNzIwNzI5OTAzMDUyMGI5YzgwYzRhZTIwM2UzNzFhNmZjMTk1NWE3MTE5NWYzZg==&code_challenge_method=S256&redirect_uri=https://auth.tesla.com/void/callback&response_type=code&scope=openid%20email%20offline_access&state=t1odfosll786yvntcwhp
      body:
        encoding: US-ASCII
        string: _csrf=l51MVRaY-6hCMNjSw1C5XVSDBFiTRfS01DsM&_phase=authenticate&_process=1&transaction_id=i2cOCn74&cancel=&identity=<TESLA_EMAIL>&credential=<TESLA_PASS>
      headers:
        User-Agent:
          - Faraday v1.3.0
        Cookie:
          - tesla-auth.sid=s%3AFkrpEHCCrdXVdhqCoBAEXYMwx_t8KOLv.U6Z26UZJ4KuomZ%2B2ZnIBa7RyXGT3ySL3fAjCvRWZPtI;
        Content-Type:
          - application/x-www-form-urlencoded
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - '*/*'
    response:
      status:
        code: 200
        message: OK
      headers:
        Server:
          - nginx
        Content-Type:
          - text/html; charset=utf-8
        Content-Length:
          - '66170'
        X-Dns-Prefetch-Control:
          - 'off'
        X-Frame-Options:
          - DENY
        Strict-Transport-Security:
          - max-age=15552000; includeSubDomains
        X-Download-Options:
          - noopen
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        X-Request-Id:
          - fed18d26-7688-4b77-a7fd-fc1bec5c48d4
        X-Correlation-Id:
          - fed18d26-7688-4b77-a7fd-fc1bec5c48d4
        Content-Security-Policy:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-3e6c18d295d29c38e144'; style-src
            'unsafe-inline' 'self'"
        X-Content-Security-Policy:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-3e6c18d295d29c38e144'; style-src
            'unsafe-inline' 'self'"
        X-Webkit-Csp:
          - "connect-src 'self'; default-src 'none'; font-src 'self' data: fonts.gstatic.com;
            frame-src 'self' www.google.com www.recaptcha.net; img-src 'self' data:;
            script-src www.recaptcha.net 'self' 'nonce-3e6c18d295d29c38e144'; style-src
            'unsafe-inline' 'self'"
        Etag:
          - W/"1027a-k9xLbznNtgFGa1VgH39iP+YYb/A"
        X-Response-Time:
          - 590.835ms
        Date:
          - Mon, 01 Feb 2021 16:13:55 GMT
        Connection:
          - keep-alive
        Set-Cookie:
          - tesla-auth.sid=s%3AFkrpEHCCrdXVdhqCoBAEXYMwx_t8KOLv.U6Z26UZJ4KuomZ%2B2ZnIBa7RyXGT3ySL3fAjCvRWZPtI;
            Path=/; Expires=Thu, 04 Feb 2021 16:13:55 GMT; HttpOnly; Secure
      body:
        encoding: ASCII-8BIT
        string: !binary |-
          
    recorded_at: Mon, 01 Feb 2021 16:13:55 GMT
  - request:
      method: get
      uri: https://auth.tesla.com/oauth2/v3/authorize/mfa/factors?transaction_id=i2cOCn74
      body:
        encoding: US-ASCII
        string: ''
      headers:
        User-Agent:
          - github.com/timdorr/tesla-api v:3.1.0
        Cookie:
          - tesla-auth.sid=s%3AFkrpEHCCrdXVdhqCoBAEXYMwx_t8KOLv.U6Z26UZJ4KuomZ%2B2ZnIBa7RyXGT3ySL3fAjCvRWZPtI;
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - '*/*'
    response:
      status:
        code: 200
        message: OK
      headers:
        Server:
          - nginx
        Content-Type:
          - application/json; charset=utf-8
        Content-Length:
          - '335'
        X-Dns-Prefetch-Control:
          - 'off'
        X-Frame-Options:
          - DENY
        Strict-Transport-Security:
          - max-age=15552000; includeSubDomains
        X-Download-Options:
          - noopen
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        X-Request-Id:
          - ec5deec1-d1b6-4526-9a2f-482675d372d3
        X-Correlation-Id:
          - ec5deec1-d1b6-4526-9a2f-482675d372d3
        Etag:
          - W/"14f-kzUvn43ehT6oSznvXim1/VDkk3s"
        X-Response-Time:
          - 165.251ms
        Date:
          - Mon, 01 Feb 2021 16:13:55 GMT
        Connection:
          - keep-alive
      body:
        encoding: UTF-8
        string: |-
          {
            "data": [
              {
                "dispatchRequired": false,
                "id": "abc123",
                "name": "Device #1",
                "factorType": "token:software",
                "factorProvider": "TESLA",
                "securityLevel": 1,
                "activatedAt": "2021-02-01T07:27:44.000Z",
                "updatedAt": "2021-02-01T07:27:44.000Z"
              }
            ]
          }
    recorded_at: Mon, 01 Feb 2021 16:13:55 GMT
  - request:
      method: post
      uri: https://auth.tesla.com/oauth2/v3/authorize/mfa/verify
      body:
        encoding: UTF-8
        string: '{"factor_id":"abc123","passcode":"123456","transaction_id":"i2cOCn74"}'
      headers:
        User-Agent:
          - github.com/timdorr/tesla-api v:3.1.0
        Cookie:
          - tesla-auth.sid=s%3AFkrpEHCCrdXVdhqCoBAEXYMwx_t8KOLv.U6Z26UZJ4KuomZ%2B2ZnIBa7RyXGT3ySL3fAjCvRWZPtI;
        Content-Type:
          - application/json
        Accept-Encoding:
          - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
        Accept:
          - '*/*'
    response:
      status:
        code: 200
        message: OK
      headers:
        Server:
          - nginx
        Content-Type:
          - application/json; charset=utf-8
        Content-Length:
          - '363'
        X-Dns-Prefetch-Control:
          - 'off'
        X-Frame-Options:
          - DENY
        Strict-Transport-Security:
          - max-age=15552000; includeSubDomains
        X-Download-Options:
          - noopen
        X-Content-Type-Options:
          - nosniff
        X-Xss-Protection:
          - 1; mode=block
        X-Request-Id:
          - fa788cda-4cc4-41ce-9526-9f1f59e771c1
        X-Correlation-Id:
          - fa788cda-4cc4-41ce-9526-9f1f59e771c1
        Etag:
          - W/"16b-ZxiQEe5oJ6OV9MKVQO8fBQJLOTQ"
        X-Response-Time:
          - 27.144ms
        Date:
          - Mon, 01 Feb 2021 16:13:55 GMT
        Connection:
          - keep-alive
      body:
        encoding: UTF-8
        string: |-
          {
            "data": {
              "id": "abc123",
              "challengeId": "abc123",
              "factorId": "abc123",
              "passCode": "123456",
              "approved": true,
              "flagged": false,
              "valid": false,
              "createdAt": "2021-02-01T08:13:55.000Z",
              "updatedAt": "2021-02-01T08:13:55.000Z"
            }
          }
    recorded_at: Mon, 01 Feb 2021 16:13:55 GMT
recorded_with: VCR 6.0.0
